// Button
//
// The component Button is officially supported in `<a>`, `<button>` and `<span>` tags. 
// The `<input>` tag has a particular behavior due to the default values and special
// implementation dragged from its implementation in the oldest browsers.
//
// `<input>` tag can be perfectly used but keep in mind that the input type doesn't allow
// to use an icon inside the text (that is place in the value attribute).
//
// ### egeo-c-button-modifier
// 
// <span class="tag tag--type">@mixin</span><span class="tag tag--tested">Test covered</span>
//
// Creates a new modifier which is a type of button with the properties passed as parameters.
//
// Usage
//
// ```
// .test {
//      @include egeo-c-button-modifier('warning', 
//                                       orange, 
//                                       1px solid blue, 
//                                       white,
//                                       red, 
//                                       1px solid white, 
//                                       white
//                                       );
// }
// ```
// Will product the next result:
// ```
// .test--warning {
// 		background: orange;
//      border: 1px solid blue;
//      color: white;
// }
//
// .test--warning:hover {
//      background: red;
//      border: 1px solid white;
//      color: white;
// }
// ```
//
// ### egeo-c-button
// 
// <span class="tag tag--type">@mixin</span><span class="tag tag--tested">Test covered</span><span class="tag tag--danger">Internal</span>
//
// Internally used to create the Egeo buttons in an extensible way.
//
// ## How to extend the button
//```
//    .#{$egeo-namespace}c-button {
//        @include egeo-c-button;
//
//        // If you want to use the modifier constructor
//        @include egeo-c-button-modifier('name-of-the-button',
//                                    #000, // Background value
//                                    1px solid #000, // Border value
//                                    #000, // Color value
//                                    #000, // Background value on hover
//                                    1px solid #000, // Border value on hover
//                                    #000, // Color value on hover
//                                    );
//
//        // your code here
//    }
// ```
//
// ## How to create a new button inheriting from button
//```
//    .my-button {
//        @include egeo-c-button;
//
//        // If you want to use the modifier constructor
//        @include egeo-c-button-modifier('name-of-you-modifier',
//                                    #000, // Background value
//                                    1px solid #000, // Border value
//                                    #000, // Color value
//                                    #000, // Background value on hover
//                                    1px solid #000, // Border value on hover
//                                    #000, // Color value on hover
//                                    );
//
//        // your code here
//    }
// ```
//
// <div class="compatibility">Compatibility untested</div>
//
// ## Variables exposed to theming
//  
// | Variable                                                                                       | Default value                                                       |
// | ---------------------------------------------------------------------------------------------- | --------------------------------------------------------------------|
// | <div class="egeo-u-tx-align-feft">$egeo-c-button</div>                                         | <div class="egeo-u-tx-align-left">`true`</div>                          |
// | <div class="egeo-u-tx-align-left">$egeo-c-button---height</div>                                | <div class="egeo-u-tx-align-left">`40px`</div>                          |
// | <div class="egeo-u-tx-align-left">$egeo-c-button---min-width</div>                             | <div class="egeo-u-tx-align-left">`180px`</div>                         |
// | <div class="egeo-u-tx-align-left">$egeo-c-button---padding</div>                               | <div class="egeo-u-tx-align-left">`0 20px`</div>                        |
// | <div class="egeo-u-tx-align-left">$egeo-c-button---text-align</div>                            | <div class="egeo-u-tx-align-left">`center`</div>                        |
// | <div class="egeo-u-tx-align-left">$egeo-c-button---text-transform</div>                        | <div class="egeo-u-tx-align-left">`uppercase`</div>                     |
// | <div class="egeo-u-tx-align-left">$egeo-c-buttons</div>                                        | <div class="egeo-u-tx-align-left">Sass map</div>            |
// | <div class="egeo-u-tx-align-left">$egeo-c-buttons-custom</div>                                 | <div class="egeo-u-tx-align-left">Sass map</div>            |
//
// ### How the buttons Sass maps work
//
// There are two different Sass Maps we can work with to create new buttons or 
// remove those that were created as default ones. The map `$egeo-c-buttons` is 
// used to describe the default buttons defined in the [Visual Guidelines](/web/visual-docs/section-1.html).
// As is defined as `!default` is perfectly possible to reset it, removing all
// the buttons pre-configurated.
//
// However, if you want create new buttons and keep the default ones, you can use
// the second map called `$egeo-c-buttons-custom` and define there the buttons you
// need to add.
//
// The system will merge the two maps to renderize the whole buttons defined in both.
//
// We have six properties we can modify to create new custom buttons: background, color, border,
// backgroun-hover, color-hover and border-hover in addition to the general properties the whole
// buttons share between them. So, if we want to creata a new pair of buttons, we only need to add
// their definitions to the `$egeo-c-buttons-custom` map as is shown below:
//
// ```
// $egeo-c-buttons-custom: (
//     mybutton: (background: egeo-get-color(a1), border: 0, color: egeo-get-color(n0), background-hover: egeo-get-color(a1_dark), border-hover: 0, color-hover: egeo-get-color(n0)),
//     mybutton-2: (background: egeo-get-color(a2), border: 0, color: egeo-get-color(n0), background-hover: egeo-get-color(a2_dark), border-hover: 0, color-hover: egeo-get-color(n0))
// );
// ```
//
// All properties are optional so, if you don't want your button have a background or a border, the 
// only thing you have to do is not including in the map and it will not be renderized.
//
// The default values of the pre-configured buttons defined in the `$egeo-c-buttons` map are:
//
// | Variable                                                                      | Default value                                                          |
// | ----------------------------------------------------------------------------- | ---------------------------------------------------------------------- |
// | <div class="egeo-u-tx-align-left">call-to-action-1 (background)</div>         | <div class="egeo-u-tx-align-left">`egeo-get-color(a1)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-1 (color)</div>              | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-1 (background-hover)</div>   | <div class="egeo-u-tx-align-left">`egeo-get-color(a1_dark)`</div>      |
// | <div class="egeo-u-tx-align-left">call-to-action-1 (color-hover)</div>        | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-2 (background)</div>         | <div class="egeo-u-tx-align-left">`egeo-get-color(a2)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-2 (color)</div>              | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-2 (background-hover)</div>   | <div class="egeo-u-tx-align-left">`egeo-get-color(a2_dark)`</div>      |
// | <div class="egeo-u-tx-align-left">call-to-action-2 (color-hover)</div>        | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-3 (background)</div>         | <div class="egeo-u-tx-align-left">`egeo-get-color(a3)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-3 (color)</div>              | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-3 (background-hover)</div>   | <div class="egeo-u-tx-align-left">`egeo-get-color(a3_dark)`</div>      |
// | <div class="egeo-u-tx-align-left">call-to-action-3 (color-hover)</div>        | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-4 (background)</div>         | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-4 (border)</div>             | <div class="egeo-u-tx-align-left">`2px solid egeo-get-color(n3)`</div> |
// | <div class="egeo-u-tx-align-left">call-to-action-4 (color)</div>              | <div class="egeo-u-tx-align-left">`egeo-get-color(n4)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-4 (background-hover)</div>   | <div class="egeo-u-tx-align-left">`egeo-get-color(n0)`</div>           |
// | <div class="egeo-u-tx-align-left">call-to-action-4 (border-hover)</div>       | <div class="egeo-u-tx-align-left">`2px solid egeo-get-color(n4)`</div> |
// | <div class="egeo-u-tx-align-left">call-to-action-4 (color-hover)</div>        | <div class="egeo-u-tx-align-left">`egeo-get-color(n5)`</div>           |
// 
// ## Usage
//
// ```
// <a class="egeo-c-button egeo-c-button--main-1"><i class="egeo-c-icon icon-cog"></i>Call to Action 1</a>
// <span class="egeo-c-button egeo-c-button--main-2"><i class="egeo-c-icon icon-cog"></i>Call to Action 2</span>
// <button class="egeo-c-button egeo-c-button--main-3"><i class="egeo-c-icon icon-cog"></i>Call to Action 3</button>
// <input type="submit" class="egeo-c-button egeo-c-button--secondary-1" value="Call to Action 4">
// <input type="reset" class="egeo-c-button egeo-c-button--danger" value="Danger action">
// <button class="egeo-c-button egeo-c-button--main-3" disabled><i class="egeo-c-icon icon-cog"></i>Disabled button</button>
// ```
// Will be renderized to:
// <hr>
// <div style="padding-left: 20px;">
//   <a class="egeo-c-button egeo-c-button--main-1"><i class="egeo-c-icon icon-cog"></i>Call to Action 1</a>
//   <span class="egeo-c-button egeo-c-button--main-2"><i class="egeo-c-icon icon-cog"></i>Call to Action 2</span>
//   <button class="egeo-c-button egeo-c-button--main-3"><i class="egeo-c-icon icon-cog"></i>Call to Action 3</button>
//   <input type="submit" class="egeo-c-button egeo-c-button--secondary-1" value="Call to Action 4">
//   <input type="reset" class="egeo-c-button egeo-c-button--danger" value="Danger action">
//   <button class="egeo-c-button egeo-c-button--main-3" disabled><i class="egeo-c-icon icon-cog"></i>Disabled button</button>
// </div>
// <hr>
//
// ## Dependencies
//  
// * [c-component](section-7.html#section-7.1)
//
// Styleguide 7.2

@import 'vars';
@import 'rules';
